pipeline {     agent none     stages {         stage('Checkout Code') {             parallel {                  stage('Build ppc64le') {                     agent {                         label "jenkins-demo3"                     }                     steps {                         script{                             checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'src'], [$class: 'CleanBeforeCheckout']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/sudeeshjohn/sampleflaskapp.git']]])                             appName = "default/flask-app-user1"                             registryHost = "mycluster.icp:8500/"                             imageName = "${registryHost}${appName}:${env.BUILD_ID}-ppc64le"                             env.BUILDIMG=imageName                             docker.withRegistry('https://mycluster.icp:8500/', 'docker'){                                 def pcImg = docker.build("mycluster.icp:8500/default/flask-app-user1:${env.BUILD_ID}", "-f src/Dockerfile.ppc64le src/")                                 sh "cp /root/.dockercfg /home/jenkins/.dockercfg"                                 pcImg.push()                                 pcImg.withRun{springboot ->                                 git 'https://github.com/sudeeshjohn/sampleflaskapp.git'                                 sh "ls"                                 }                             }                          }                     }                 }             }          }     }   } 

